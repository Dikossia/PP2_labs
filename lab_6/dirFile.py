#1 task

import os

def list_directories_and_files(path="."):
    print(f"\nüìÇ –°–ø–∏—Å–æ–∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞: {path}\n")
    
    # –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    all_items = os.listdir(path)
    
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    directories = [d for d in all_items if os.path.isdir(os.path.join(path, d))]
    
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤
    files = [f for f in all_items if os.path.isfile(os.path.join(path, f))]
    
    print("üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:", directories)
    print("üìÑ –§–∞–π–ª—ã:", files)
    print("üì¶ –í—Å—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:", all_items)


list_directories_and_files(".")

#2 task

def check_access(path):
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—É—Ç–∏: {path}")

    if os.path.exists(path):
        print("‚úÖ –ü—É—Ç—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        print("üìñ –î–æ—Å—Ç—É–ø –¥–ª—è —á—Ç–µ–Ω–∏—è:", os.access(path, os.R_OK))
        print("‚úè –î–æ—Å—Ç—É–ø –¥–ª—è –∑–∞–ø–∏—Å–∏:", os.access(path, os.W_OK))
        print("‚öô –î–æ—Å—Ç—É–ø –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:", os.access(path, os.X_OK))
    else:
        print("‚ùå –ü—É—Ç—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

check_access(r"C:\Users\Huawei\Desktop\PP2_labs\lab_6\example.txt")

#3 task

def check_path_info(path):
    if os.path.exists(path):
        print(f"\nüìÅ –ü—É—Ç—å '{path}' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        print("üìÑ –ò–º—è —Ñ–∞–π–ª–∞:", os.path.basename(path))
        print("üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:", os.path.dirname(path))
    else:
        print(f"‚ùå –ü—É—Ç—å '{path}' –Ω–µ –Ω–∞–π–¥–µ–Ω")

check_path_info(r"C:\Users\Huawei\Desktop\PP2_labs\lab_6\example.txt")

#4 task

def count_lines(filename):
    try:
        with open(filename, "r", encoding="utf-8") as file:
            lines = file.readlines()
            print(f"üìñ –§–∞–π–ª '{filename}' —Å–æ–¥–µ—Ä–∂–∏—Ç {len(lines)} —Å—Ç—Ä–æ–∫")
    except FileNotFoundError:
        print(f"‚ùå –§–∞–π–ª '{filename}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")

count_lines(r"C:\Users\Huawei\Desktop\PP2_labs\lab_6\example.txt")

#5 task

def write_list_to_file(filename, data):
    with open(filename, "w", encoding="utf-8") as file:
        for item in data:
            file.write(str(item) + "\n")
    print(f"‚úÖ –°–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–∞–Ω –≤ —Ñ–∞–π–ª '{filename}'")

data = ["Python", "Java", "C++", "JavaScript"]
write_list_to_file(r"C:\Users\Huawei\Desktop\PP2_labs\lab_6\languages.txt", data)

#6 task

import string

def create_alphabet_files():
    folder = "C:/Users/Huawei/Desktop/PP2_labs/alphabettxt"  # –ü–∞–ø–∫–∞, –∫—É–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞–ø–∫–∞, –µ—Å–ª–∏ –Ω–µ—Ç ‚Äì —Å–æ–∑–¥–∞—ë–º
    if not os.path.exists(folder):
        os.makedirs(folder)

    for letter in string.ascii_uppercase:  # A-Z
        filename = os.path.join(folder, f"{letter}.txt")  # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—É—Ç—å
        with open(filename, "w") as file:
            file.write(f"This is file {letter}.txt")  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª
        print(f"‚úÖ –§–∞–π–ª '{filename}' —Å–æ–∑–¥–∞–Ω")

create_alphabet_files() 

#7 task

import shutil

def copy_file(source, destination):
    try:
        shutil.copyfile(source, destination)
        print(f"‚úÖ –§–∞–π–ª '{source}' —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ '{destination}'")
    except FileNotFoundError:
        print(f"‚ùå –§–∞–π–ª '{source}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")

copy_file(r"C:\Users\Huawei\Desktop\PP2_labs\lab_6\example.txt", "copy_example.txt")

#8 task

import os

def delete_file(filename):
    if os.path.exists(filename):
        if os.access(filename, os.W_OK):
            os.remove(filename)
            print(f"‚úÖ –§–∞–π–ª '{filename}' —É–¥–∞–ª—ë–Ω")
        else:
            print(f"‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ '{filename}'")
    else:
        print(f"‚ùå –§–∞–π–ª '{filename}' –Ω–µ –Ω–∞–π–¥–µ–Ω")

delete_file(r"C:\Users\Huawei\Desktop\PP2_labs\lab_6\copy_example.txt")



